import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { NearestCityApi } from "../src/types/nearestCity.api";
import SectionResults from "../src/section/results";
import { FailedApi } from "../src/types/failed.api";
import { StatusApi } from "../src/types/status.api";
import { Text } from "@chakra-ui/react";
import { Headers } from "next/dist/server/web/spec-compliant/headers";

const LOCAL_IP = ["::1", "127.0.0.1"];

interface HomeProps {
  nearestCity: NearestCityApi | FailedApi;
}

const Home: NextPage<HomeProps> = ({ nearestCity }) => {
  switch (nearestCity.status) {
    case StatusApi.Success:
      return (
        <div className={styles.container}>
          <Head>
            <title>Create Next App</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>

          <SectionResults
            aqi={nearestCity.data.current.pollution.aqius}
            temperature={nearestCity.data.current.weather.tp}
            humidity={nearestCity.data.current.weather.hu}
            city={nearestCity.data.city}
            state={nearestCity.data.state}
            country={nearestCity.data.country}
            lastUpdateTemperature={new Date(nearestCity.data.current.weather.ts)}
            lastUpdatePollution={new Date(nearestCity.data.current.pollution.ts)}
          />
        </div>
      );
    case StatusApi.Fail:
      return (
        <div className={styles.container}>
          <Head>
            <title>Create Next App</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>

          <Text>{nearestCity.data.message}</Text>
        </div>
      );
    default:
      return (
        <div className={styles.container}>
          <Head>
            <title>Create Next App</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>

          <Text>Something went wrong.</Text>
        </div>
      );
  }
};

export const getServerSideProps: GetServerSideProps = async ({
  req: {
    headers,
    connection: { remoteAddress },
  },
}) => {
  const remoteIp = headers["x-forwarded-for"] || headers.forwarded || remoteAddress || "1.1.1.1";
  const ip = LOCAL_IP.includes(String(remoteIp)) ? "1.1.1.1" : remoteIp;

  const requestHeaders = new Headers();
  requestHeaders.set("x-forwarded-for", String(ip));
  const res = await fetch(
    `https://api.airvisual.com/v2/nearest_city?key=${process.env.API_KEY}&x-forwarded-for=${ip}`,
    {
      headers: requestHeaders,
    },
  );
  const nearestCity = (await res.json()) as NearestCityApi | FailedApi;

  return {
    props: {
      nearestCity,
    },
  };
};

export default Home;
